// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  levels         Level[]  @relation("Publisher")
  levelsVerified Level[]  @relation("Verifier")
  levelsCreated  Level[]  @relation("Creators")
  records        Record[]
}

model Level {
  id          Int            @id @default(autoincrement())
  name        String
  levelId     Int            @unique
  user        User           @relation("Publisher", fields: [userId], references: [id])
  userId      Int
  verifier    User           @relation("Verifier", fields: [verifierId], references: [id])
  verifierId  Int
  creators    User[]         @relation("Creators")
  video       String
  requirement Int
  log         ListLogLevel[]
  archive     Archive[]
  listLog     ListLog[]
  records     Record[]
}

model Record {
  timestamp  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  level      Level    @relation(fields: [levelId], references: [id])
  percentage Float
  video      String?
  userId     Int
  levelId    Int

  @@id([userId, levelId])
}

model ListLog {
  timestamp DateTime       @id @default(now())
  list      ListLogLevel[]
  action    ListLogAction
  level     Level          @relation(fields: [levelId], references: [id])
  levelId   Int
  from      Int?
  to        Int?
  reason    String?
}

enum ListLogAction {
  ADD // Level has been added
  MOVE // Level has been moved
  DELETE // Level has been deleted
}

// Level Wrapper to include the ordinal rank on the list
model ListLogLevel {
  log          ListLog  @relation(fields: [logTimestamp], references: [timestamp])
  logTimestamp DateTime
  level        Level    @relation(fields: [levelId], references: [id])
  levelId      Int
  index        Int

  @@id([logTimestamp, levelId])
  @@unique([logTimestamp, index])
}

model Archive {
  level     Level    @relation(fields: [levelId], references: [id])
  levelId   Int      @id
  timestamp DateTime @default(now())
}
