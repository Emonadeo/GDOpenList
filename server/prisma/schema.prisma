// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  name           String  @id
  levels         Level[] @relation("Publisher")
  levelsVerified Level[] @relation("Verifier")
  levelsCreated  Level[] @relation("Creators")
}

model Level {
  id           Int            @id @default(autoincrement())
  name         String
  user         User           @relation("Publisher", fields: [userName], references: [name])
  userName     String
  verifier     User           @relation("Verifier", fields: [verifierName], references: [name])
  verifierName String
  creators     User[]         @relation("Creators", references: [name])
  video        String
  log          ListLogLevel[]
  archive      Archive[]
  listLog      ListLog[]
}

model ListLog {
  timestamp DateTime       @id @default(now())
  list      ListLogLevel[]
  action    ListLogAction
  level     Level          @relation(fields: [levelId], references: [id])
  levelId   Int
  from      Int?
  to        Int?
}

enum ListLogAction {
  ADD // Level has been added
  MOVE // Level has been moved
  DELETE // Level has been deleted
}

// Level Wrapper to include the ordinal rank on the list
model ListLogLevel {
  log          ListLog  @relation(fields: [logTimestamp], references: [timestamp])
  logTimestamp DateTime
  level        Level    @relation(fields: [levelId], references: [id])
  levelId      Int
  index        Int

  @@id([logTimestamp, levelId])
  @@unique([logTimestamp, index])
}

model Archive {
  level     Level    @relation(fields: [levelId], references: [id])
  levelId   Int      @id
  timestamp DateTime @default(now())
}
